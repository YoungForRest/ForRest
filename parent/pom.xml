<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.youngth.zhou</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0.0</version>
    <name>parent</name>
    <packaging>pom</packaging>
    <description>基础父模块</description>

    <properties>
        <!-- 项目属性定义 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-->>>>>>>>>>依赖版本指定<<<<<<<<<-->
        <spring-boot.version>2.1.3.RELEASE</spring-boot.version>
        <!-- spring-boot 2.1.3.RELEASE 对应的 spring-web版本-->
        <spring-web.version>5.1.5.RELEASE</spring-web.version>
        <spring-boot-thymeleaf.version>2.0.6.RELEASE</spring-boot-thymeleaf.version>
        <mybatisplus-spring-boot-starter.version>1.0.5</mybatisplus-spring-boot-starter.version>
        <mybatis-plus.version>2.1.9</mybatis-plus.version>
        <mybatis-plus.version>2.1.9</mybatis-plus.version>
        <druid.version>1.1.10</druid.version>
        <mysql-connector-java.version>8.0.16</mysql-connector-java.version>
        <jasypt-spring-boot.version>2.1.1</jasypt-spring-boot.version>
        <ibeetl.version>2.9.3</ibeetl.version>


        <!--私有库版本-->
        <com.youngth.zhou.version>1.0.0.0</com.youngth.zhou.version>
    </properties>

    <!-- dependencies即使在子项目中不写该依赖项，那么子项目仍然会从父项目中继承该依赖项（全部继承）

         dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。
         如果不在子项目中声明依赖，是不会从父项目中继承下来的；
         只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，
         并且version和scope都读取自父pom;另外如果子项目中指定了版本号，
         那么会使用子项目中指定的jar版本。
     -->
    <!--使用dependencyManagement 定义子项目依赖版本-->
    <dependencyManagement>
        <dependencies>
            <!-- 导入Spring Boot的依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring-web.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${spring-boot-thymeleaf.version}</version>
            </dependency>
            <!--mybatisplus-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatisplus-spring-boot-starter</artifactId>
                <version>${mybatisplus-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-support</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!--数据源-->
            <!--druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--mysql 连接-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- 属性加密 -->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt-spring-boot.version}</version>
            </dependency>

            <!--beetl-->
            <dependency>
                <groupId>com.ibeetl</groupId>
                <artifactId>beetl</artifactId>
                <version>${ibeetl.version}</version>
            </dependency>

            <!--私有库定义-->
            <dependency>
                <groupId>com.youngth.zhou</groupId>
                <artifactId>entity</artifactId>
                <version>${com.youngth.zhou.version}</version>
            </dependency>
            <dependency>
                <groupId>com.youngth.zhou</groupId>
                <artifactId>utils</artifactId>
                <version>${com.youngth.zhou.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--使用dependencies定义全局依赖-->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>
                        <fork>true</fork>
                    </configuration>
                </plugin>
                <!--打包成war包时忽略web.xml不存在导致打包失败的错误-->
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <!--配置Maven 对resource文件 过滤 -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>